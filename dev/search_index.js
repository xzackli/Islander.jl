var documenterSearchIndex = {"docs":
[{"location":"#Islander.jl-1","page":"Home","title":"Islander.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [Islander]\nOrder   = [:function, :type]\nPages   = [\"Islander.jl\", \"Pixell.jl\"]","category":"page"},{"location":"#Islander.car-Tuple{Any,Any,Any}","page":"Home","title":"Islander.car","text":"Generate a plate carree WCS object.\n\npixell python reference: pos : def car(pos, res=None, shape=None, rowmajor=False, ref=None): \tpos, res, shape, mid = validate(pos, res, shape, rowmajor) \tw = WCS(naxis=2) \tw.wcs.ctype = [\"RA–-CAR\", \"DEC–CAR\"] \tw.wcs.crval = np.array([mid[0],0]) \tif ref is \"standard\": ref = (0,0) \treturn finalize(w, pos, res, shape, ref=ref)\n\n\n\n\n\n","category":"method"},{"location":"#Islander.Enmap","page":"Home","title":"Islander.Enmap","text":"Map type, contains an AbstractArray and a WCS object, but behaves like the AbstractArray it contains for array operations.\n\n\n\n\n\n","category":"type"},{"location":"#","page":"Home","title":"Home","text":"Islander will be a nice component separation code someday!","category":"page"}]
}
